package IO;
import java.io.IOException;
import java.io.OutputStream;
import java.util.*;

public  class MyCompressorOutputStream extends OutputStream {
    private OutputStream out;
    private byte byteCount;
    private byte lastByte;

    public MyCompressorOutputStream(OutputStream out) {
        this.out = out;
    }

    @Override
    public void write(int b) throws IOException {

    }

    public void write(byte[] b) throws IOException {
        ArrayList<Byte> counterArray = new ArrayList<Byte>();
        int ind =0;
        int runable= (b.length-24)/8;
        int dex=0;
        int num=24;
        for(int i=0;i<runable;i++){
            int k =0;
            for(int a=num;a<num+8;a++){
                if(b[a]!=0){
                    k+=Math.pow(2,7-(a-num));
                }
                ind++;
                if(ind==8){
                    num+=ind;
                    ind=0;
                    counterArray.add((byte)k);
                    break;
                }
            }
        }
        int f=(b.length)%8;
        byte[] bytearr = new byte[counterArray.size()+24+f];
        for (int a = 0; a <24; a++) {
            bytearr[a] = b[a];
        }
        int l =0;
        for(int y=24;y<bytearr.length-f;y++){
            bytearr[y]=counterArray.get(l);
            l++;
        }
        int kla=bytearr.length-f;
        for(int fi=b.length-f;fi<b.length;fi++){
            bytearr[kla]=b[fi];
            kla++;
        }
        out.write(bytearr);
    }
}
